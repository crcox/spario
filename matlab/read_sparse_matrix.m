function x = read_sparse_matrix(file)
    header_sizes = struct( ...
        'int_size'   , 'int8', ...
        'value_size' , 'int8', ...
        'nrow'       , 'int32', ...
        'ncol'       , 'int32', ...
        'nnzero'     , 'int32', ...
        'spmat_repr' , 'int8', ...
        'value_dtype', 'int8' ...
    );
    
    read_one = @(size) fread(file, 1, size, 'l');
    read_vec = @(meta) fread(file, meta.length, meta.precision, 'l');
    dtypes = ["integer", "integer", "real"];
    decode_value_dtype = @(value_dtype_ind) dtypes(value_dtype_ind + 1);
    prec_str = @(dtype, size) sprintf('%s*%d', dtype, size);

    header = structfun(read_one, header_sizes, 'UniformOutput', false);
    body_meta = struct( ...
        'i', struct('precision', prec_str('integer', header.int_size), 'length', header.nnzero), ...
        'p', struct('precision', prec_str('integer', header.int_size), 'length', header.ncol + 1), ...
        'x', struct('precision', prec_str(decode_value_dtype(header.value_dtype), header.value_size), 'length', header.nnzero) ...
    );
    body = structfun(read_vec, body_meta, 'UniformOutput', false);
    
    x = sparse(body.i + 1, pointers2index(body.p), body.x);
end


function ind = pointers2index(p)
    pdiff = diff(p);
    nzcol = find(pdiff);
    ind = repelem(nzcol, pdiff(nzcol));
end
