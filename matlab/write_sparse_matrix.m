function write_sparse_matrix(x, file)
    header = struct( ...
        'int_size'   , struct('value',          4, 'precision',  'int8'), ...
        'value_size' , struct('value',          8, 'precision',  'int8'), ...
        'nrow'       , struct('value', size(x, 1), 'precision', 'int32'), ...
        'ncol'       , struct('value', size(x, 2), 'precision', 'int32'), ...
        'nnzero'     , struct('value',     nnz(x), 'precision', 'int32'), ...
        'spmat_repr' , struct('value',          0, 'precision',  'int8'), ...
        'value_dtype', struct('value',          2, 'precision',  'int8') ...
    );
    dtypes = ["integer", "integer", "real"];
    decode_value_dtype = @(value_dtype_ind) dtypes(value_dtype_ind + 1);
    prec_str = @(dtype, size) sprintf('%s*%d', dtype, size);

    [i, j] = ind2sub(size(x), find(x));

    body = struct( ...
        'i', struct('value',         i - 1, 'precision', prec_str('integer', header.int_size.value)), ...
        'j', struct('value',         j - 1, 'precision', prec_str('integer', header.int_size.value)), ...
        'x', struct('value', full(x(x~=0)), 'precision', prec_str(decode_value_dtype(header.value_dtype.value), header.value_size.value)) ...
    );

    write = @(s) fwrite(file, s.value, s.precision, 'l');

    structfun(write, header);
    structfun(write, body);
end
