% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/serialize.R
\name{serialize_sparse_matrix}
\alias{serialize_sparse_matrix}
\alias{deserialize_sparse_matrix}
\title{Serialize and deserialize a sparse matrix}
\usage{
serialize_sparse_matrix(x, int_size = NULL, value_size = NULL)

deserialize_sparse_matrix(x, value_dtype = NULL)
}
\arguments{
\item{x}{Sparse matrix of class CsparseMatrix or RsparseMatrix}

\item{int_size}{Number of bytes required to represent each integer in the
sparse matrix representation (i.e., row/col indices and "pointers").}

\item{value_size}{Number of bytes required to represent each value stored in
the matrix. If the value dtype is logical, this defaults to 1 byte; if
integer, this defaults to 8 bytes; and if numeric, this defaults to 16
bytes. Rather than a number of bytes, the strings "single" and "double" may
be provided, which correspond to 8 and 16 bytes.}
}
\value{
A list of raw vectors
}
\description{
This returns a list of raw vectors. This
}
\details{
The serialization begins with a 30-byte header that consists of:
\enumerate{
\item Number of bytes per integer in the sparse matrix representation (not within
the header, wherein all values are of fixed size). (2 bytes)
\item Number of bytes per value in the sparse matrix. (2 bytes)
\item Number of rows (8 bytes)
\item Number of columns (8 bytes)
\item Number of non-zero values in the matrix (8 bytes)
\item The sparse matrix representation (0: triplets; 1: compressed row; 2:
compressed column) (1 byte)
\item The data type of the values stored in the matrix (0: logical; 1: integer; 2:
float) (1 byte)
}

The serialization continues with the body. In the following description,
\code{nnzeros} stands for the number of non-zero values stored in the sparse
matrix, \code{nrows} and \code{ncols} are the number of rows and columns, and \code{dtype}
refers to whatever data type was actually stored, which should be encoded in
the header. The body differs based on the sparse matrix representation:

If TMatrix:
\enumerate{
\item Row indices (integers; nnzeros)
\item Column indices (integers; nnzeros)
\item Matrix data values (dtype; nnzeros)
}

If RMatrix (see \code{?RsparseMatrix}):
\enumerate{
\item Col indices (integers; nnzeros)
\item Pointers to first element in each row (integers; nrows)
\item Matrix data values (dtype; nnzeros)
}

If CMatrix (see \code{?CsparseMatrix}):
\enumerate{
\item Row indices (integers; nnzeros)
\item Pointers to first element in each column (integers; ncols)
\item Matrix data values (dtype; nnzeros)
}
}
